eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=api-gateway

# To increase the logging level of api gateway application
logging.level.root = INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE

#Product Service Routes
#spring.cloud.gateway.server.webflux.routes[0].id = product-service
##api gateway also acts as load balancer, we can also ask the api gatway to load balance the request by adding "lb" in front of the uri.
#spring.cloud.gateway.server.webflux.routes[0].uri = lb://product-service
## defining url parameter to match this service
#spring.cloud.gateway.server.webflux.routes[0].predicates[0] = Path = /api/product

spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

#Order Service Routes
#spring.cloud.gateway.server.webflux.routes[1].id = order-service
#spring.cloud.gateway.server.webflux.routes[1].uri = lb://order-service
#spring.cloud.gateway.server.webflux.routes[1].predicates[0] = Path = /api/order

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

#Discovery Server Route
spring.cloud.gateway.routes[2].id=discovery-service
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
#To access the Eureka server without url parameter we should use filters.
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#Discovery Server Static ResourcesRoute
spring.cloud.gateway.routes[3].id=discovery-service-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**


#
spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8181/realms/spring-boot-microservices-realm






